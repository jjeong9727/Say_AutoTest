[
  {
    "test_name": "test_login",
    "status": "FAIL",
    "message": "FAILED tests/test_login.py::test_login_flow[Mobile Chrome] - AssertionError: ...",
    "timestamp": "2025-07-17 16:58:30",
    "file": "tests/test_login.py",
    "stack": "============================= test session starts =============================\nplatform win32 -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0\nrootdir: C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Say\nplugins: base-url-2.1.0, html-4.1.1, json-0.4.0, json-report-1.5.0, metadata-3.1.1, ordering-0.6, playwright-0.7.0\ncollected 2 items\n\ntests\\test_login.py Fs                                                   [100%]\n\n================================== FAILURES ===================================\n_______________________ test_login_flow[Mobile Chrome] ________________________\n\npage = <Page url='https://stg.say-rec.centurion.ai.kr/login'>\ndevice_profile = {'device_scale_factor': 3, 'has_touch': True, 'is_mobile': True, 'user_agent': 'Mozilla/5.0 (Linux; Android 14; SM-S921N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Mobile Safari/537.36', ...}\n\n    def test_login_flow(page: Page, device_profile):\n        if not device_profile[\"is_mobile\"]:\n            pytest.skip(\"\\u274c \\ubaa8\\ubc14\\uc77c \\ud658\\uacbd\\uc5d0\\uc11c\\ub9cc \\uc2e4\\ud589\\ub429\\ub2c8\\ub2e4.\")\n    \n        page.goto(URLS[\"record_login\"])\n        page.wait_for_timeout(2000)\n    \n        page.fill('[data-testid=\"input_id\"]', Account[\"testid_1\"])\n        page.wait_for_timeout(1000)\n        expect(page.locator('[data-testid=\"btn_login\"]')).to_be_disabled()\n        page.wait_for_timeout(1000)\n        page.fill('[data-testid=\"input_pw\"]', Account[\"wrongpw\"])\n        page.wait_for_timeout(1000)\n        page.click('[data-testid=\"btn_login\"]')\n        page.wait_for_timeout(1000)\n>       expect(page.locator('[data-testid=\"alert_wrong\"]')).to_be_visible(timeout=3000)\nE       AssertionError: Locator expected to be visible\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - LocatorAssertions.to_be_visible with timeout 3000ms\nE         -   - waiting for locator(\"[data-testid=\\\"alert_wrong\\\"]\")\n\ntests\\test_login.py:25: AssertionError\n--------------------------------- JSON report ---------------------------------\nreport saved to: .report.json\n=========================== short test summary info ===========================\nFAILED tests/test_login.py::test_login_flow[Mobile Chrome] - AssertionError: ...\n======================== 1 failed, 1 skipped in 14.96s ========================\n",
    "duration": "15.84초",
    "device": null
  },
  {
    "test_name": "test_record_status",
    "status": "FAIL",
    "message": "tests\\test_record_status.py:73: AssertionError",
    "timestamp": "2025-07-17 16:59:09",
    "file": "tests/test_record_status.py",
    "stack": "============================= test session starts =============================\nplatform win32 -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0\nrootdir: C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Say\nplugins: base-url-2.1.0, html-4.1.1, json-0.4.0, json-report-1.5.0, metadata-3.1.1, ordering-0.6, playwright-0.7.0\ncollected 2 items\n\ntests\\test_record_status.py Fs                                           [100%]\n\n================================== FAILURES ===================================\n_______________________ test_check_popup[Mobile Chrome] _______________________\n\npage = <Page url='https://stg.say-rec.centurion.ai.kr/'>\ndevice_profile = {'device_scale_factor': 3, 'has_touch': True, 'is_mobile': True, 'user_agent': 'Mozilla/5.0 (Linux; Android 14; SM-S921N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Mobile Safari/537.36', ...}\n\n    def test_check_popup (page:Page , device_profile):\n        if not device_profile[\"is_mobile\"]:\n            pytest.skip(\"\\u274c \\ubaa8\\ubc14\\uc77c \\ud658\\uacbd\\uc5d0\\uc11c\\ub9cc \\uc2e4\\ud589\\ub429\\ub2c8\\ub2e4.\")\n    \n        counselor = \"QA 계정(권정의)\"\n        cust_name = \"홍길동\"\n        wrong_contact = \"01112345678\"\n        short_contact = \"0101234567\"\n        cust_contact = \"01012345678\"\n        email = \"testnaver.com\"\n        ready = \"녹음 준비 완료\"\n        recoding = \"녹음 중\"\n        pause = \"일시정지 중\"\n        txt_cancel = \"상담을 취소할까요?\"\n        txt_stop = \"상담을 종료할까요?\"\n    \n        login(page, \"record\", \"testid_1\")\n    \n        check_logout_popup(page)\n    \n    \n        page.locator('[data-testid=\"btn_customer_exist\"]').click()\n        expect(page.locator(\"data-testid=txt_counselor_name\")).to_be_visible(timeout=3000)\n        text = page.locator('[data-testid=\"txt_counselor_name\"]').inner_text().strip()\n        acutual_counselor = text.split('님')[0].strip()\n        assert counselor == acutual_counselor, f\"상담사명 불일치: {counselor} != {acutual_counselor}\"\n        page.wait_for_timeout(1000)\n    \n        check_logout_popup(page)\n    \n        page.locator('[data-testid=\"btn_back\"]').click()\n        expect(page.locator('[data-testid=\"btn_customer_new\"]')).to_be_visible(timeout=3000)\n        page.wait_for_timeout(1000)\n        page.locator('[data-testid=\"btn_customer_new\"]').click()\n        page.wait_for_timeout(1000)\n        page.fill('[data-testid=\"input_customer_name\"]', cust_name)\n        page.wait_for_timeout(1000)\n        # 010 아닌 전화번호\n        page.fill('[data-testid=\"input_contact\"]', wrong_contact)\n        page.wait_for_timeout(1000)\n        page.locator('[data-testid=\"btn_start\"]').click()\n        expect(page.locator('[data-testid=\"toast_contact\"]')).to_be_visible(timeout=3000)\n        page.wait_for_timeout(1000)\n        # 10자리 전화번호\n        page.fill('[data-testid=\"input_contact\"]', short_contact)\n        page.wait_for_timeout(1000)\n        page.locator('[data-testid=\"btn_start\"]').click()\n        expect(page.locator('[data-testid=\"toast_contact\"]')).to_be_visible(timeout=3000)\n        page.wait_for_timeout(1000)\n        # 이메일 형식 오류\n        page.fill('[data-testid=\"input_contact\"]', email)\n        page.wait_for_timeout(1000)\n        page.locator('[data-testid=\"btn_start\"]').click()\n        expect(page.locator('[data-testid=\"toast_contact\"]')).to_be_visible(timeout=3000)\n        page.wait_for_timeout(1000)\n        # \"녹음 준비 완료\" 상태 확인\n        page.fill('[data-testid=\"input_contact\"]', cust_contact)\n        page.wait_for_timeout(1000)\n        page.locator('[data-testid=\"btn_start\"]').click()\n        expect(page.locator(f'[data-testid=\"txt_status\"]')).to_have_text(ready, timeout=3000)\n        page.wait_for_timeout(1000)\n        # 종료 버튼 비활성화 확인\n        expect(page.locator(\"data-testid=btn_stop\")).to_be_disabled(timeout=3000)\n        page.wait_for_timeout(1000)\n        # # 녹음 준비 상태 > 취소 확인 팝업 닫기 버튼 확인\n        page.locator('[data-testid=\"btn_cancel\"]').click()\n>       expect(page.locator(\"data-testid=btn_close\")).to_be_visible(timeout=3000)\nE       AssertionError: Locator expected to be visible\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - LocatorAssertions.to_be_visible with timeout 3000ms\nE         -   - waiting for locator(\"data-testid=btn_close\")\n\ntests\\test_record_status.py:73: AssertionError\n--------------------------------- JSON report ---------------------------------\nreport saved to: .report.json\n=========================== short test summary info ===========================\nFAILED tests/test_record_status.py::test_check_popup[Mobile Chrome] - Asserti...\n======================== 1 failed, 1 skipped in 37.70s ========================\n",
    "duration": "38.56초",
    "device": null
  },
  {
    "test_name": "test_record",
    "status": "FAIL",
    "message": "FAILED tests/test_record.py::test_record_cancel[Mobile Chrome] - AssertionErr...",
    "timestamp": "2025-07-17 17:02:54",
    "file": "tests/test_record.py",
    "stack": "============================= test session starts =============================\nplatform win32 -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0\nrootdir: C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Say\nplugins: base-url-2.1.0, html-4.1.1, json-0.4.0, json-report-1.5.0, metadata-3.1.1, ordering-0.6, playwright-0.7.0\ncollected 6 items\n\ntests\\test_record.py .s.sFs                                              [100%]\n\n================================== FAILURES ===================================\n______________________ test_record_cancel[Mobile Chrome] ______________________\n\npage = <Page url='https://stg.say-rec.centurion.ai.kr/recording/1'>\ndevice_profile = {'device_scale_factor': 3, 'has_touch': True, 'is_mobile': True, 'user_agent': 'Mozilla/5.0 (Linux; Android 14; SM-S921N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Mobile Safari/537.36', ...}\n\n    def test_record_cancel(page:Page, device_profile):\n        if not device_profile[\"is_mobile\"]:\n            pytest.skip(\"\\u274c \\ubaa8\\ubc14\\uc77c \\ud658\\uacbd\\uc5d0\\uc11c\\ub9cc \\uc2e4\\ud589\\ub429\\ub2c8\\ub2e4.\")\n    \n        counselor = \"QA 계정(권정의)\"\n        cust_name = \"홍길동\"\n        cust_contact = \"01012345678\"\n        notice_cancel = \"상담을 취소할까요?\"\n    \n        login(page, \"record\", \"testid_1\")\n    \n        page.locator('[data-testid=\"btn_customer_new\"]').click()\n        expect(page.locator(\"data-testid=txt_counselor_name\")).to_be_visible(timeout=3000)\n        text = page.locator('[data-testid=\"txt_counselor_name\"]').inner_text().strip()\n        acutual_counselor = text.split('님')[0].strip()\n        assert counselor == acutual_counselor, f\"상담사명 불일치: {counselor} != {acutual_counselor}\"\n        page.wait_for_timeout(1000)\n    \n        page.fill('[data-testid=\"input_customer_name\"]', cust_name)\n        page.wait_for_timeout(1000)\n        page.fill('[data-testid=\"input_contact\"]', cust_contact)\n        page.wait_for_timeout(1000)\n    \n        page.locator('[data-testid=\"btn_start\"]').click()\n        page.wait_for_timeout(1000)\n    \n        page.click('[data-testid=\"btn_start\"]')\n        page.wait_for_timeout(5000)\n        page.click('[data-testid=\"btn_cancel\"]')\n        page.wait_for_timeout(1000)\n>       expect(page.locator('[data-testid=\"txt_cancel\"]')).to_have_text(notice_cancel, timeout=3000)\nE       AssertionError: Locator expected to have text '상담을 취소할까요?'\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - LocatorAssertions.to_have_text with timeout 3000ms\nE         -   - waiting for locator(\"[data-testid=\\\"txt_cancel\\\"]\")\n\ntests\\test_record.py:119: AssertionError\n--------------------------------- JSON report ---------------------------------\nreport saved to: .report.json\n=========================== short test summary info ===========================\nFAILED tests/test_record.py::test_record_cancel[Mobile Chrome] - AssertionErr...\n============= 1 failed, 2 passed, 3 skipped in 224.21s (0:03:44) ==============\n",
    "duration": "225.00초",
    "device": null
  }
]